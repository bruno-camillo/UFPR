program vetores006;

const max = 200;

type vetor = array [1 .. max] of real;

var operador, i, tam : longint;
    v : vetor;
    achou : boolean;
    
//procedimento que insere um novo valor ao vetor, ajustando o tamanho e o indice do proximo conteudo    
    
procedure insere (var v : vetor; var i : longint; var tam : longint);

begin
        tam := tam + 1;
        read ( v[i] );
        i := i + 1;
end;

//procedimento que imprime todos os conteudos do vetor

procedure imprime_vetor (var v : vetor; tam : longint);
var k : longint;

begin
    for k := 1 to tam do
        write ( v[k]:0:1, ' ' );
    writeln;
end;

//funcao que procura o conteudo a ser removido do vetor, tambem retornando na variavel 'achou' um valor true ou false, que confirma se o conteudo foi encontrado ou nao no vetor 

function busca (var v : vetor; n : real; tam : longint; var achou : boolean): longint;
var i : longint;

begin   
    v[tam + 1] := n; i := 1;
    while v[i] <> n do
        i := i + 1;
    if i <= tam then
            busca := i
    else
        begin
        	busca := tam + 1;
        	achou := false;
        end;
end;

//procedimento que remove o conteudo do vetor, caso ele for encontrado pela funcao 'busca'

procedure remove_do_vetor (var v : vetor; var i : longint; var tam : longint; var achou : boolean);
var n : real;
    local, k : longint;

begin  
    read (n);
    local := busca (v, n, tam, achou);
    if achou then
    begin
	    for k := local to tam do
		v[k] := v[k+1];
	    tam := tam - 1;
	    i := i - 1;
    end;
end;

//procedimento que vai ordenar o vetor em ordem crescente antes de imprimir

procedure ordena_vetor (var v : vetor; tam : longint);
var temp : real;
    i, j, pos_menor : longint;

begin
    for i := 1 to tam - 1 do
        begin
            pos_menor := i;
                for j := i + 1 to tam do
                    if v[j] < v[pos_menor] then
                        pos_menor := j;
            temp := v[pos_menor];
            v[pos_menor] := v[i];
            v[i] := temp;
        end;
end;



//funcao que busca o menor valor entre os conteudos de um vetor

function busca_o_menor (var v : vetor; tam : longint): real;
var i : longint;

begin
    busca_o_menor := v[1];
    for i := 1 to tam do
        if v[i] < busca_o_menor then
            busca_o_menor := i;
end;

//procedimento que imprime o vetor resultante de toda a operacao

procedure vetor_resultante (v : vetor; achou : boolean ; tam : longint; operador : longint);

begin
	    if tam = 0 then
		    writeln ('vazio')
		else
		    if (operador = 1) or achou then
			    imprime_vetor (v, tam);
end;

(*programa principal*)
begin
    read (operador);
    achou := true;
    i := 1; tam := 0;
    while operador <> 0 do
        begin
           if (operador = 1) or (operador = 2) then
            begin 
		    if operador = 1 then
		        insere (v, i, tam);
		    if operador = 2 then
		        remove_do_vetor (v, i, tam, achou);
		    if i > max + 1 then
		    	begin
		            writeln ('erro');
		            i := i - 1;
		            tam := tam - 1;
		        end
		    else
			if not achou then
				    writeln ('erro')
		    else
		    	if tam = 0 then
		    		writeln ('vazio')
		    else
		        if (operador = 1) or achou then
		    	begin
			    ordena_vetor (v, tam);
			    imprime_vetor (v, tam);
		    	end;
		    	
            end;
            achou := true;
            read (operador);
        end;
    vetor_resultante (v, achou, tam, operador);
end.
